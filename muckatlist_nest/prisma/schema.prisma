generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model group_muckat_list {
  groupmuckat_id String        @id @db.VarChar(255)
  group_name     String?       @db.VarChar(255)
  room_master    Int?          @db.TinyInt
  user_id        String?       @db.VarChar(255)
  user_info      user_info?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FKo3qyb4j31ev48215wj2ck0x43")
  image_group    image_group[]

  @@index([user_id], map: "FKo3qyb4j31ev48215wj2ck0x43")
}

model image_db {
  image_id        String    @id @db.VarChar(255)
  image_timestamp DateTime? @db.Date
}

model image_group {
  image_group_id    String             @id @db.VarChar(255)
  image_src         String?            @db.VarChar(255)
  groupmuckat_id    String?            @db.VarChar(255)
  group_muckat_list group_muckat_list? @relation(fields: [groupmuckat_id], references: [groupmuckat_id], onDelete: NoAction, onUpdate: NoAction, map: "FK4gcr3qggnmi4evs2pe3onl5fd")

  @@index([groupmuckat_id], map: "FK4gcr3qggnmi4evs2pe3onl5fd")
}

model image_personal {
  image_personal_id String     @id @db.VarChar(255)
  image_src         String?    @db.VarChar(255)
  user_id           String?    @db.VarChar(255)
  user_info         user_info? @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FKtgnb0s5ox9mdqdi6kciwbvw7f")

  @@index([user_id], map: "FKtgnb0s5ox9mdqdi6kciwbvw7f")
}

model kakao_login {
  code          String  @id @db.VarChar(255)
  kakao_id      String? @db.VarChar(255)
  refresh_token String? @db.VarChar(255)
}

model memo {
  muckatlist_id   String           @id @db.VarChar(255)
  checks          Boolean?         @db.Bit(1)
  memo_id         String?          @db.VarChar(255)
  restaurant_id   String?          @db.VarChar(255)
  restaurant_info restaurant_info? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction, map: "FKtmkyarlv1eq4rftv8mjajx3mj")

  @@index([restaurant_id], map: "FKtmkyarlv1eq4rftv8mjajx3mj")
}

model personal_muckat_list {
  personal_muckat_id String     @id @db.VarChar(255)
  personal_name      String?    @db.VarChar(255)
  user_id            String?    @db.VarChar(255)
  user_info          user_info? @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK1p778kkl1p4sseg9y2fmkuq81")

  @@index([user_id], map: "FK1p778kkl1p4sseg9y2fmkuq81")
}

model restaurant_info {
  restaurant_id   String          @id @db.VarChar(255)
  address         String?         @db.VarChar(255)
  avg_grade       Float?
  category        String?         @db.VarChar(255)
  link            String?         @db.VarChar(255)
  phone_number    String?         @db.VarChar(255)
  restaurant_name String?         @db.VarChar(255)
  review_count    Int?
  memo            memo[]
  schedule        schedule[]
  user_favorite   user_favorite[]
  user_review     user_review[]
}

model schedule {
  schedule_id     String           @id @db.VarChar(255)
  group_schedule  Boolean?         @db.Bit(1)
  muckatlist_id   String?          @db.VarChar(255)
  schedule_time   DateTime?        @db.Date
  restaurant_id   String?          @db.VarChar(255)
  restaurant_info restaurant_info? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction, map: "FKpca2l9kqyi2f6t8qepc762gfe")

  @@index([restaurant_id], map: "FKpca2l9kqyi2f6t8qepc762gfe")
}

model university_info {
  university_name String      @id @db.VarChar(255)
  address         String?     @db.VarChar(255)
  position_x      Float?
  position_y      Float?
  user_info       user_info[]
}

model user_favorite {
  heart_id        BigInt           @id @default(autoincrement())
  restaurant_id   String?          @db.VarChar(255)
  user_id         String?          @db.VarChar(255)
  user_info       user_info?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FKlu7k57n0ht0blprkty85fur9m")
  restaurant_info restaurant_info? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction, map: "FKpebo7icvhl8dqn5iew3in0ct0")

  @@index([user_id], map: "FKlu7k57n0ht0blprkty85fur9m")
  @@index([restaurant_id], map: "FKpebo7icvhl8dqn5iew3in0ct0")
}

model user_info {
  user_id              String                 @id @db.VarChar(255)
  fcm_token            String?                @db.VarChar(255)
  point                Int?
  university_name      String?                @db.VarChar(255)
  group_muckat_list    group_muckat_list[]
  image_personal       image_personal[]
  personal_muckat_list personal_muckat_list[]
  user_favorite        user_favorite[]
  university_info      university_info?       @relation(fields: [university_name], references: [university_name], onDelete: NoAction, onUpdate: NoAction, map: "FK9e1ab5ppk0i8s2ywln9s25qw5")
  user_review          user_review[]

  @@index([university_name], map: "FK9e1ab5ppk0i8s2ywln9s25qw5")
}

model user_review {
  user_review_id  String           @id @db.VarChar(255)
  details         String?          @db.VarChar(255)
  like_count      String?          @db.VarChar(255)
  star            Float?
  write_time      String?          @db.VarChar(255)
  restaurant_id   String?          @db.VarChar(255)
  user_id         String?          @db.VarChar(255)
  user_info       user_info?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FKdeuf08jy10mno46ofsec91hpx")
  restaurant_info restaurant_info? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction, map: "FKk5s9qoc9tescy10mlfmw06bbf")

  @@index([user_id], map: "FKdeuf08jy10mno46ofsec91hpx")
  @@index([restaurant_id], map: "FKk5s9qoc9tescy10mlfmw06bbf")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_review_seq {
  next_val BigInt?

  @@ignore
}
